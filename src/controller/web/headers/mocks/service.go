// Code generated by MockGen. DO NOT EDIT.
// Source: model.go

// Package mock_headers is a generated GoMock package.
package mock_headers

import (
	headers "notes-manager/src/controller/web/headers"
	reflect "reflect"

	fiber "github.com/gofiber/fiber/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockGetter is a mock of Getter interface.
type MockGetter struct {
	ctrl     *gomock.Controller
	recorder *MockGetterMockRecorder
}

// MockGetterMockRecorder is the mock recorder for MockGetter.
type MockGetterMockRecorder struct {
	mock *MockGetter
}

// NewMockGetter creates a new mock instance.
func NewMockGetter(ctrl *gomock.Controller) *MockGetter {
	mock := &MockGetter{ctrl: ctrl}
	mock.recorder = &MockGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetter) EXPECT() *MockGetterMockRecorder {
	return m.recorder
}

// GetSession mocks base method.
func (m *MockGetter) GetSession(c *fiber.Ctx) *headers.Session {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession", c)
	ret0, _ := ret[0].(*headers.Session)
	return ret0
}

// GetSession indicates an expected call of GetSession.
func (mr *MockGetterMockRecorder) GetSession(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockGetter)(nil).GetSession), c)
}
