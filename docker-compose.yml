version: '3'
services:
  ns-postgres:
    image: postgres:16.0-alpine3.18
    restart: always
    container_name: ns-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: note-service
      POSTGRES_DB: note_service
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "6001:5432"
    networks:
      - note-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ns-redis:
    image: redis:7.2.1-alpine3.18
    restart: always
    container_name: ns-redis
    command: >
      --requirepass note-service
    volumes:
      - ./redis_data:/data
    ports:
      - "6002:6379"
    networks:
      - note-service-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "auth note-service", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ns-app:
    container_name: ns-app
    build:
      context: .
      dockerfile: dockerfile
    env_file: ./configs/config.env
    volumes:
      - $PWD:/app
      - ./configs:/configs
    ports:
      - "6000:8080"
    depends_on:
      ns-postgres:
        condition: service_healthy
      ns-redis:
        condition: service_healthy
    networks:
      - note-service-network
      
volumes:
  postgres_data:
  redis_data:

networks:
  note-service-network:
    name: 'note-service-network'
    driver: bridge